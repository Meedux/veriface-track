generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql", "sqlite", etc.
  url      = env("DATABASE_URL")
}

model User {
  id         String       @id @default(cuid())
  email      String       @unique
  name       String
  password   String
  strand     String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  
  // Face recognition data
  faceData   FaceData?
  
  // Attendance records
  attendance Attendance[]
}

model FaceData {
  id             String   @id @default(cuid())
  descriptors    Json     // Store face descriptor arrays as JSON
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  // Relation to User
  user           User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId         String   @unique
}

model Attendance {
  id        String   @id @default(cuid())
  date      DateTime @default(now()) // Stores full date including year/month/day
  time      String   // Formatted time like "8:30 AM" for display purposes
  status    String   // "present", "late", "absent"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relation to User
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  
  @@index([date]) // Add index for date queries
  @@index([userId, date]) // Add compound index for user + date queries
}